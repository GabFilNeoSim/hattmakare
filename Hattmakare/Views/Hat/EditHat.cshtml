@using Hattmakare.Models.Hats

@model EditHatViewModel

@{
    ViewBag.Title = "Ändra en hat";
}

@* <div class="container d-flex justify-content-center">
    <div class="col-md-8 col-lg-6">
        <form method="post" asp-action="EditHat" enctype="multipart/form-data" class="p-4 shadow rounded bg-light">
            <h2 class="mb-4 text-center">Redigera Hatt</h2>
            <div class="form-group mb-3">
                <label asp-for="Name" class="form-label fw-bold">Hattens namn</label>
                <input asp-for="Name" class="form-control" placeholder="Skriv namn på hatten" required />
                <span asp-validation-for="Name" class="text-danger small"></span>
            </div>
            <div class="row mb-3">
                <div class="col-md-6">
                    <label asp-for="Price" class="form-label fw-bold">Pris</label>
                    <input asp-for="Price" type="number" class="form-control" placeholder="Ange pris i SEK" required />
                    <span asp-validation-for="Price" class="text-danger small"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="Quantity" class="form-label fw-bold">Antal i lager</label>
                    <input asp-for="Quantity" type="number" class="form-control" placeholder="Hur många finns i lager?" required />
                    <span asp-validation-for="Quantity" class="text-danger small"></span>
                </div>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Size" class="form-label fw-bold">Storlek</label>
                <input asp-for="Size" class="form-control" placeholder="Ange storlek (t.ex. S, M, L, 58cm...)" required />
                <span asp-validation-for="Size" class="text-danger small"></span>
            </div>
            <div class="row mb-3">
                <div class="col-md-4">
                    <label asp-for="Length" class="form-label fw-bold">Längd</label>
                    <input asp-for="Length" type="text" inputmode="numeric" pattern="[0-9]*" class="form-control" placeholder="Ange i cm" required />
                    <span asp-validation-for="Length" class="text-danger small"></span>
                </div>
                <div class="col-md-4">
                    <label asp-for="Depth" class="form-label fw-bold">Djup</label>
                    <input asp-for="Depth" type="text" inputmode="numeric" pattern="[0-9]*" class="form-control" placeholder="Ange i cm" required />
                    <span asp-validation-for="Depth" class="text-danger small"></span>
                </div>
                <div class="col-md-4">
                    <label asp-for="Width" class="form-label fw-bold">Bredd</label>
                    <input asp-for="Width" type="text" inputmode="numeric" pattern="[0-9]*" class="form-control" placeholder="Ange i cm" required />
                    <span asp-validation-for="Width" class="text-danger small"></span>
                </div>
            </div>
            <div class="form-group mb-4">
                <label asp-for="Image" class="form-label fw-bold">Ladda upp bild</label>
                <input asp-for="Image" type="file" class="form-control" />
                <span asp-validation-for="Image" class="text-danger small"></span>
            </div>
            <div class="form-check mb-4">
                <input type="checkbox" class="form-check-input" asp-for="IsSpecial">
                <label class="form-check-label" asp-for="IsSpecial">Markera som specialhatt</label>
                <span asp-validation-for="IsSpecial" class="text-danger small"></span>
            </div>
            <h4 class="mt-4">Materialval</h4>
            <div id="material-selection" class="mb-3">
                <div class="input-group material-group">
                    <select id="material-dropdown" class="form-select">
                        <option value="">-- Välj material --</option>
                        @foreach (var mat in Model.AvailableMaterials)
                        {
                            <option value="@mat.MaterialId" data-name="@mat.Name" data-unit="@mat.Unit">@mat.Name (@mat.Unit)</option>
                        }
                    </select>
                    <input type="number" id="material-qty" class="form-control" placeholder="Mängd" min="1" />
                    <button type="button" id="add-material-btn" class="btn btn-blue btn-sm">
                        <i class="fa-solid fa-plus"></i>
                        Lägg till
                    </button>
                </div>
            </div>
            <ul id="material-list" class="list-group mb-4">
                @for (int i = 0; i < Model.SelectedMaterials.Count; i++)
                {
                    var mat = Model.SelectedMaterials[i];
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @mat.Name - @mat.Quantity @mat.Unit
                        <button type="button" class="btn btn-sm btn-danger ms-2" onclick="this.parentElement.remove()">
                            <i class="fa-solid fa-xmark"></i>
                        </button>
                        <input type="hidden" name="SelectedMaterials[@i].MaterialId" value="@mat.MaterialId" />
                        <input type="hidden" name="SelectedMaterials[@i].Quantity" value="@mat.Quantity" />
                    </li>
                }
            </ul>
            <div class="text-end">
                <a asp-controller="Hat" asp-action="Index" class="btn btn-secondary mt-4">Tillbaka</a> <br />
                <button type="submit" class="btn btn-blue px-4 mt-4 text-light">
                    <i class="fa-solid fa-floppy-disk"></i>
                    Spara hatt
                </button>
            </div>

            @section Scripts {
                <script>
                    const dropdown = document.getElementById('material-dropdown');
                    const qtyInput = document.getElementById('material-qty');
                    const addBtn = document.getElementById('add-material-btn');
                    const list = document.getElementById('material-list');

                    let index = @Model.SelectedMaterials.Count;

                    addBtn.addEventListener('click', () => {
                        const id = dropdown.value;
                        const name = dropdown.options[dropdown.selectedIndex].dataset.name;
                        const unit = dropdown.options[dropdown.selectedIndex].dataset.unit;
                        const qty = qtyInput.value;

                        if (!id || qty < 1) return;

                        const li = document.createElement('li');
                        li.className = 'list-group-item d-flex justify-content-between align-items-center';
                        li.innerHTML = `
                            ${name} - ${qty} ${unit}
                            <button type="button" class="btn btn-sm btn-danger ms-2 text-light" onclick="this.parentElement.remove()">
                                <i class="fa-solid fa-xmark"></i>
                            </button>
                            <input type="hidden" name="SelectedMaterials[${index}].MaterialId" value="${id}" />
                            <input type="hidden" name="SelectedMaterials[${index}].Quantity" value="${qty}" />
                        `;
                        list.appendChild(li);

                        index++;
                        qtyInput.value = '';
                        dropdown.selectedIndex = 0;
                    });
                </script>
            }

            </form>
        </div>
</div> *@

<div class="container d-flex justify-content-center">
    <div class="col-md-8 col-lg-6">
        <form method="post" asp-action="EditHat" enctype="multipart/form-data" class="p-4 shadow rounded bg-light">
            <h2 class="mb-4 text-center">Ändra hatt</h2>
            <div class="row mb-3">
                <div class="col-md-6">
                    <label asp-for="Name" class="form-label fw-bold">Hattens namn</label>
                    <input asp-for="Name" class="form-control" placeholder="Skriv namn på hatten" required />
                    <span asp-validation-for="Name" class="text-danger small"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="Image" class="form-label fw-bold">Ladda upp bild</label>
                    <input asp-for="Image" type="file" class="form-control" />
                    <span asp-validation-for="Image" class="text-danger small"></span>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6">
                    <label asp-for="Quantity" class="form-label fw-bold">Antal i lager</label>
                    <input asp-for="Quantity" type="number" class="form-control" placeholder="Hur många finns i lager?" required />
                    <span asp-validation-for="Quantity" class="text-danger small"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="Size" class="form-label fw-bold">Storlek</label>
                    <input asp-for="Size" class="form-control" placeholder="Ange storlek" required />
                    <span asp-validation-for="Size" class="text-danger small"></span>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-4">
                    <label asp-for="Length" class="form-label fw-bold">Längd</label>
                    <input asp-for="Length" type="text" inputmode="numeric" pattern="[0-9]*" class="form-control" placeholder="Ange i cm" required />
                    <span asp-validation-for="Length" class="text-danger small"></span>
                </div>
                <div class="col-md-4">
                    <label asp-for="Depth" class="form-label fw-bold">Djup</label>
                    <input asp-for="Depth" type="text" inputmode="numeric" pattern="[0-9]*" class="form-control" placeholder="Ange i cm" required />
                    <span asp-validation-for="Depth" class="text-danger small"></span>
                </div>
                <div class="col-md-4">
                    <label asp-for="Width" class="form-label fw-bold">Bredd</label>
                    <input asp-for="Width" type="text" inputmode="numeric" pattern="[0-9]*" class="form-control" placeholder="Ange i cm" required />
                    <span asp-validation-for="Width" class="text-danger small"></span>
                </div>
            </div>
            <div class="form-check mb-4">
                <input type="checkbox" class="form-check-input" asp-for="IsSpecial">
                <label class="form-check-label" asp-for="IsSpecial">Markera som specialhatt</label>
                <span asp-validation-for="IsSpecial" class="text-danger small"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Comment" class="form-label"><strong>Kommentar</strong></label>
                <textarea class="form-control" asp-for="Comment" rows="4"></textarea>
            </div>
            <hr />
            <h4 class="mt-4">Materialval</h4>
            <div id="material-selection" class="mb-3">
                <div class="input-group material-group">
                    <select id="material-dropdown" class="form-select">
                        <option value="">-- Välj material --</option>
                        @foreach (var mat in Model.AvailableMaterials)
                        {
                            <option value="@mat.MaterialId" data-name="@mat.Name" data-unit="@mat.Unit" data-price="@mat.Price">@mat.Name - @mat.Price kr</option>
                        }
                    </select>
                    <input type="number" id="material-qty" class="form-control" style="width: 50px;" placeholder="Mängd" min="0" step="0.01" />
                    <div class="material-unit" id="material-unit-val">-</div>
                    <button type="button" id="add-material-btn" class="btn btn-blue btn-sm">
                        <i class="fa-solid fa-plus"></i>
                        Lägg till
                    </button>
                </div>
            </div>
            <ul id="material-list" class="list-group mb-4">
                @for (int i = 0; i < Model.SelectedMaterials.Count; i++)
                {
                    var mat = Model.SelectedMaterials[i];
                    var materialPrice = mat.Price * (decimal)mat.Quantity;
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @mat.Name (@mat.Quantity @mat.Unit) - @materialPrice.ToString("C").Replace(",", ".")
                        <button type="button" class="btn btn-sm btn-danger ms-2" onclick="removeMaterial(this, @materialPrice)">
                            <i class="fa-solid fa-xmark"></i>
                        </button>
                        <input type="hidden" name="SelectedMaterials[@i].MaterialId" value="@mat.MaterialId" />
                        <input type="hidden" name="SelectedMaterials[@i].Quantity" value="@mat.Quantity" />
                    </li>
                }
            </ul>
            <div class="mb-3">
                <strong id="total-price">Totalt materialpris: </strong>
            </div>
            <div class="mb-3">
                <strong id="profit">Marginal:  </strong>
            </div>
            <hr />

            <div class="col-md-6">
                <label asp-for="Price" class="form-label fw-bold">Försäljningspris</label>
                <input asp-for="Price" type="number" class="form-control" placeholder="Ange pris i SEK" required />
                <span asp-validation-for="Price" class="text-danger small"></span>
            </div>

            <div class="text-end">
                <a asp-controller="Hat" asp-action="Index" class="btn btn-secondary mt-4">Tillbaka</a> <br />
                <button type="submit" class="btn btn-blue px-4 mt-4 text-light">
                    <i class="fa-solid fa-plus"></i>
                    Spara
                </button>
            </div>

            @section Scripts {
                <script>
                    const dropdown = document.getElementById('material-dropdown');
                    const qtyInput = document.getElementById('material-qty');
                    const addBtn = document.getElementById('add-material-btn');
                    const list = document.getElementById('material-list');
                    const totalPriceDisplay = document.getElementById('total-price');
                    const priceInput = document.getElementById('Price');
                    const profitPriceDisplay = document.getElementById('profit');

                    let index = document.querySelectorAll('#material-list li').length;
                    let totalMaterialPrice = 0;

                    dropdown.addEventListener("change", () => {
                        let unit = dropdown.options[dropdown.selectedIndex].dataset.unit;
                        console.log(unit);
                        const materialVal = document.getElementById("material-unit-val");
                        if(!unit) {
                            unit = "-";
                        }
                        materialVal.innerText = unit;
                    });

                    addBtn.addEventListener('click', () => {
                        const id = dropdown.value;
                        const name = dropdown.options[dropdown.selectedIndex].dataset.name;
                        const unit = dropdown.options[dropdown.selectedIndex].dataset.unit;
                        const pricePerUnit = parseFloat(dropdown.options[dropdown.selectedIndex].dataset.price.replace(",", "."));
                        const qty = parseFloat(qtyInput.value.replace(",", "."));

                        if (!id || qty < 0.001) return;

                        const existingItem = Array.from(list.children).find(li => {
                            const input = li.querySelector(`input[name*="MaterialId"]`);
                            return input && input.value === id;
                        });

                        if (existingItem) {
                            // Uppdatera mängd och pris
                            const qtyInput = existingItem.querySelector(`input[name*="Quantity"]`);
                            const currentQty = parseFloat(qtyInput.value);
                            const newQty = currentQty + qty;
                            const newTotalPrice = (newQty * pricePerUnit).toFixed(2);

                        // Uppdatera text och inputs
                        existingItem.innerHTML = `
                            ${name} (${newQty} ${unit}) - ${newTotalPrice} kr
                            <button type="button" class="btn btn-sm btn-danger ms-2" onclick="removeMaterial(this, ${newTotalPrice})">
                                <i class="fa-solid fa-xmark"></i>
                            </button>
                            <input type="hidden" name="${qtyInput.name.replace(/\d+/, index)}.MaterialId" value="${id}" />
                            <input type="hidden" name="${qtyInput.name.replace(/\d+/, index)}.Quantity" value="${newQty}" />
                        `;

                        totalMaterialPrice += pricePerUnit * qty;
                        } else {
                            const totalPrice = (pricePerUnit * qty);

                        // Create list item UI
                            const li = document.createElement('li');
                            li.className = 'list-group-item d-flex justify-content-between align-items-center';
                            li.innerHTML = `
                                        ${name} (${qty } ${unit}) - ${totalPrice.toFixed(2)} kr
                                <button type="button" class="btn btn-sm btn-danger ms-2" onclick="removeMaterial(this, ${totalPrice})">
                                            <i class="fa-solid fa-xmark"></i>
                                </button>
                                <input type="hidden" name="SelectedMaterials[${index}].MaterialId" value="${id}" />
                                <input type="hidden" name="SelectedMaterials[${index}].Quantity" value="${qty}" />
                            `;
                            list.appendChild(li);

                            totalMaterialPrice += parseFloat(totalPrice);
                            totalPriceDisplay.textContent = `Totalt materialpris: ${totalMaterialPrice.toFixed(2)} kr`;

                            updateProfit();

                            index++;
                            qtyInput.value = '';
                            dropdown.selectedIndex = 0;
                        }
                    });
                     

                    function reindexMaterials() {
                        const items = list.querySelectorAll("li");
                        items.forEach((li, newIndex) => {
                            const materialIdInput = li.querySelector('input[name*="MaterialId"]');
                            const quantityInput = li.querySelector('input[name*="Quantity"]');
                            materialIdInput.name = `SelectedMaterials[${newIndex}].MaterialId`;
                            quantityInput.name = `SelectedMaterials[${newIndex}].Quantity`;
                        });
                        index = items.length;
                    }

                        
                    function removeMaterial(button, price) {
                        button.parentElement.remove();
                        totalMaterialPrice -= price;
                        totalPriceDisplay.textContent = `Totalt materialpris: ${totalMaterialPrice.toFixed(2)} kr`;
                        updateProfit();
                        reindexMaterials();
                    }
                    

                    function updateProfit() {
                        const salePrice = parseFloat(priceInput.value) || 0;
                        const profit = (salePrice - totalMaterialPrice);
                        profitPriceDisplay.textContent = `Vinstmarginal vid försäljning: ${profit.toFixed(2)} kr`;
                    }

                    
                    document.addEventListener("DOMContentLoaded", function () {
                        const items = list.querySelectorAll("li");
                        items.forEach(item => {
                            const text = item.textContent;
                            const priceMatch = text.match(/- ([\d.,]+) kr/);
                            if (priceMatch) {
                                const price = parseFloat(priceMatch[1].replace(",", "."));
                                if (!isNaN(price)) {
                                    totalMaterialPrice += price;
                                }
                            }
                        });
                        totalPriceDisplay.textContent = `Totalt materialpris: ${totalMaterialPrice.toFixed(2)} kr`;
                        updateProfit();
                    });


                        priceInput.addEventListener('input', updateProfit);
                </script>
            }
        </form>
    </div>
</div>
